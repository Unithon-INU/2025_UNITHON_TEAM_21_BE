package UNITON.demo.chatting.service;

import UNITON.demo.chatting.entity.ChatRoom;
import UNITON.demo.chatting.repository.ChatRoomRepository;
import UNITON.demo.chatting.repository.OrganizationRepository;
import UNITON.demo.login.entity.Organization;
import UNITON.demo.login.entity.UserEntity;
import UNITON.demo.login.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;
import java.util.List;

@Service
@RequiredArgsConstructor
public class ChatRoomService {
    private final ChatRoomRepository chatRoomRepository;
    private final OrganizationRepository organizationRepository;

    public ChatRoom getOrCreateChatRoom(UserEntity user, Long organizationId) {
        if (organizationId == null || organizationId <= 0) {
            throw new IllegalArgumentException("Í∏∞Í¥Ä IDÍ∞Ä Ïú†Ìö®ÌïòÏßÄ ÏïäÏäµÎãàÎã§.");
        }

        // üîç Í∏∞Í¥Ä Ï°∞Ìöå
        Organization organization = organizationRepository.findById(organizationId)
                .orElseThrow(() -> new IllegalArgumentException("Í∏∞Í¥ÄÏù¥ Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§."));

        // ‚úÖ Í∏∞Ï°¥ Ï±ÑÌåÖÎ∞© Ï°∞Ìöå or ÏÉàÎ°ú ÏÉùÏÑ±
        return chatRoomRepository.findByUserAndOrganization(user, organization)
                .orElseGet(() -> {
                    ChatRoom room = new ChatRoom();
                    room.setUser(user);
                    room.setOrganization(organization);
                    return chatRoomRepository.save(room);
                });
    }
    /**
     * ÎÇ¥Í∞Ä Ï∞∏Ïó¨ Ï§ëÏù∏ Î™®Îì† Ï±ÑÌåÖÎ∞© Ï°∞Ìöå
     */
    public List<ChatRoom> getAllChatRoomsForUser(UserEntity user) {
        return chatRoomRepository.findAllByUserInvolved(user.getId());
    }
    public List<ChatRoom> getAllChatRoomsForOrganization(Organization organization) {
        return chatRoomRepository.findAllByOrganizationId(organization.getId());
    }
    /**
     * ÌäπÏ†ï Ï±ÑÌåÖÎ∞©Ïóê ÎÇ¥Í∞Ä Ï†ëÍ∑º Í∞ÄÎä•ÌïúÏßÄ ÌôïÏù∏
     */

}
